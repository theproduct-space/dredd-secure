syntax = "proto3";

package dreddsecure.escrow;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "dreddsecure/escrow/params.proto";
import "dreddsecure/escrow/escrow.proto";
import "dreddsecure/escrow/oracle_price.proto";

option go_package = "dredd-secure/x/escrow/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/dredd-secure/escrow/params";
  
  }
  
  // Queries a list of Escrow items.
  rpc Escrow    (QueryGetEscrowRequest) returns (QueryGetEscrowResponse) {
    option (google.api.http).get = "/dredd-secure/escrow/escrow/{id}";
  
  }
  rpc EscrowAll (QueryAllEscrowRequest) returns (QueryAllEscrowResponse) {
    option (google.api.http).get = "/dredd-secure/escrow/escrow";
  
  }
  
  // Queries a list of EscrowsByAddress items.
  rpc EscrowsByAddress (QueryEscrowsByAddressRequest) returns (QueryEscrowsByAddressResponse) {
    option (google.api.http).get = "/dredd-secure/escrow/escrows_by_address/{address}";
  
  }
  rpc PendingEscrows   (QueryPendingEscrowsRequest  ) returns (QueryPendingEscrowsResponse  ) {
    option (google.api.http).get = "/dredd-secure/escrow/pending_escrows";
  
  }
  
  // Queries a list of OraclePrice items.
  rpc OraclePrice    (QueryGetOraclePriceRequest) returns (QueryGetOraclePriceResponse) {
    option (google.api.http).get = "/dredd-secure/escrow/oracle_price/{symbol}";
  
  }
  rpc OraclePriceAll (QueryAllOraclePriceRequest) returns (QueryAllOraclePriceResponse) {
    option (google.api.http).get = "/dredd-secure/escrow/oracle_price";
  
  }

  rpc GetSourceChannel (QuerySourceChannelRequest) returns (QuerySourceChannelResponse) {
    option (google.api.http).get = "/dredd-secure/escrow/source_channel";
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetEscrowRequest {
  uint64 id = 1;
}

message QueryGetEscrowResponse {
  Escrow Escrow = 1 [(gogoproto.nullable) = false];
}

message QueryAllEscrowRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllEscrowResponse {
  repeated Escrow                                 Escrow     = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryEscrowsByAddressRequest {
  string                                address    = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryEscrowsByAddressResponse {
  repeated Escrow                                 Escrow     = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryPendingEscrowsRequest {}

message QueryPendingEscrowsResponse {
  repeated uint64 ids = 1 [(gogoproto.nullable) = false];
}

message QueryGetOraclePriceRequest {
  string symbol = 1;
}

message QueryGetOraclePriceResponse {
  OraclePrice oraclePrice = 1 [(gogoproto.nullable) = false];
}

message QueryAllOraclePriceRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllOraclePriceResponse {
  repeated OraclePrice                            oraclePrice = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination  = 2;
}

message QuerySourceChannelRequest {}

message QuerySourceChannelResponse {
  string channel = 1;
}